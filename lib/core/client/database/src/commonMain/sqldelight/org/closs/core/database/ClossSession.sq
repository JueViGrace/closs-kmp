import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS closs_session(
    access_token TEXT NOT NULL,
    refresh_token TEXT NOT NULL,
    user_id TEXT NOT NULL,
    active INTEGER AS Boolean NOT NULL,
    PRIMARY KEY(user_id),
    FOREIGN KEY(user_id) REFERENCES closs_user(id)
);

findActiveAccount:
SELECT *
FROM closs_session
LEFT JOIN closs_user
ON closs_session.user_id = closs_user.id
WHERE active = 1;

findAccounts:
SELECT *
FROM closs_session
LEFT JOIN closs_user
ON closs_session.user_id = closs_user.id;

insert:
INSERT OR REPLACE INTO closs_session(
    access_token,
    refresh_token,
    user_id,
    active
)
VALUES ?
RETURNING *;

startSession:
UPDATE closs_session SET
    active = 1
WHERE user_id = :id;

endSession:
UPDATE closs_session SET
    active = 0
WHERE active = 1;

endSessions:
UPDATE closs_session SET
    active = 0
WHERE user_id != :id;

deleteSession:
DELETE FROM closs_session
WHERE user_id = :id;
