CREATE TABLE IF NOT EXISTS closs_salesman(
    codigo TEXT NOT NULL PRIMARY KEY,
    nombre TEXT NOT NULL DEFAULT '',
    email TEXT NOT NULL UNIQUE DEFAULT '',
    telefono TEXT NOT NULL DEFAULT '',
    telefonos TEXT NOT NULL DEFAULT '',
    status INTEGER NOT NULL DEFAULT 0,
    supervpor TEXT NOT NULL DEFAULT '',
    sector TEXT NOT NULL DEFAULT '',
    subcodigo TEXT NOT NULL DEFAULT '',
    nivgcial INTEGER NOT NULL DEFAULT 0,
    created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP
);

findSalesmanByManager:
SELECT
closs_salesman.codigo,
closs_user.username,
closs_salesman.nombre,
closs_salesman.email,
closs_salesman.telefono,
closs_salesman.telefonos,
closs_salesman.supervpor,
closs_sector.zona AS sector,
closs_subsector.subsector AS subsector,
closs_user.ult_sinc,
closs_user.version,
closs_salesman.created_at,
closs_salesman.updated_at
FROM closs_salesman
LEFT JOIN closs_sector
ON closs_sector.codigo = closs_salesman.sector
LEFT JOIN closs_subsector
ON closs_subsector.subcodigo = closs_salesman.subcodigo
LEFT JOIN closs_user
ON closs_salesman.codigo = closs_user.codigo
LEFT JOIN closs_managers
ON closs_salesman.supervpor = closs_managers.kng_codcoord
WHERE closs_salesman.status = 1 AND
closs_managers.kng_codgcia = :manager
GROUP BY closs_salesman.codigo;

findSalesmanByCode:
SELECT
closs_salesman.codigo,
closs_user.username,
closs_salesman.nombre,
closs_salesman.email,
closs_salesman.telefono,
closs_salesman.telefonos,
closs_salesman.supervpor,
closs_sector.zona AS sector,
closs_subsector.subsector AS subsector,
closs_user.ult_sinc,
closs_user.version
FROM closs_salesman
LEFT JOIN closs_sector
ON closs_sector.codigo = closs_salesman.sector
LEFT JOIN closs_subsector
ON closs_subsector.subcodigo = closs_salesman.subcodigo
LEFT JOIN closs_user
ON closs_salesman.codigo = closs_user.codigo
WHERE closs_salesman.codigo = :code;

findExistingSalesmanByCode:
SELECT
closs_salesman.codigo,
closs_user.username,
closs_salesman.nombre,
closs_salesman.email,
closs_salesman.telefono,
closs_salesman.telefonos,
closs_salesman.supervpor,
closs_sector.zona AS sector,
closs_subsector.subsector AS subsector,
closs_user.ult_sinc,
closs_user.version
FROM closs_salesman
LEFT JOIN closs_sector
ON closs_sector.codigo = closs_salesman.sector
LEFT JOIN closs_subsector
ON closs_subsector.subcodigo = closs_salesman.subcodigo
LEFT JOIN closs_user
ON closs_salesman.codigo = closs_user.codigo
WHERE closs_salesman.codigo = :code AND closs_salesman.status = 1;

insert:
INSERT OR REPLACE INTO closs_salesman(
    codigo,
    nombre,
    telefono,
    telefonos,
    status,
    supervpor,
    sector,
    subcodigo,
    email,
    nivgcial
)
VALUES ?
RETURNING *;

update:
UPDATE closs_salesman SET
    nombre = :nombre,
    telefono = :telefono,
    telefonos = :telefonos,
    supervpor = :supervpor,
    sector = :sector,
    subcodigo = :subcodigo,
    email = :email
WHERE codigo = :code
RETURNING *;

updateUserId:
UPDATE closs_salesman SET
    codigo = :codigo,
    updated_at = CURRENT_TIMESTAMP
WHERE codigo = :code
RETURNING *;
